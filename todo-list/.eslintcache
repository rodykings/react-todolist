[{"/home/rodykings/Desktop/react-todolist/todo-list/src/index.js":"1","/home/rodykings/Desktop/react-todolist/todo-list/src/App.js":"2","/home/rodykings/Desktop/react-todolist/todo-list/src/Styles.js":"3","/home/rodykings/Desktop/react-todolist/todo-list/src/components/Todo.js":"4","/home/rodykings/Desktop/react-todolist/todo-list/src/components/TodoForm.js":"5","/home/rodykings/Desktop/react-todolist/todo-list/src/components/TodoList.js":"6"},{"size":197,"mtime":1612459703827,"results":"7","hashOfConfig":"8"},{"size":1074,"mtime":1612460607269,"results":"9","hashOfConfig":"8"},{"size":812,"mtime":1612459947705,"results":"10","hashOfConfig":"8"},{"size":1539,"mtime":1612461286483,"results":"11","hashOfConfig":"8"},{"size":1075,"mtime":1612461520743,"results":"12","hashOfConfig":"8"},{"size":856,"mtime":1612462034186,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"qafdzc",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rodykings/Desktop/react-todolist/todo-list/src/index.js",[],["28","29"],"/home/rodykings/Desktop/react-todolist/todo-list/src/App.js",[],"/home/rodykings/Desktop/react-todolist/todo-list/src/Styles.js",[],"/home/rodykings/Desktop/react-todolist/todo-list/src/components/Todo.js",["30"],"import React, { useState, useEffect} from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport TodoList from \"./TodoList\";  \n\nfunction Todo() {\n  const [taskList, setTaskList] = useState([]);\n\n\n  useEffect(() => {\n      getLocalTodos();\n  }, [])\n\n  useEffect(() => {\n    saveLocalTodos();\n  }, [taskList])\n\n\n  const saveLocalTodos = () =>{\n    localStorage.setItem('todos', JSON.stringify(taskList));\n  }\n\n const getLocalTodos = () =>{\n    if(localStorage.getItem('todos') === null){\n      localStorage.setItem('todos', JSON.stringify([]));\n    }else{\n      let todoLocal = JSON.parse(localStorage.getItem('todos'));\n      setTaskList(todoLocal);\n    }\n  }\n\n  const removeElement = (id) => { \n      const newTaskList = taskList.filter(element => {\n        return element.id !== id;\n      });  \n      setTaskList(newTaskList);\n  }; \n\n  const crossElement = (id) => {\n    let element = taskList.find(element => { return element.id === id}); \n    let newTaskList = taskList.filter(element => {return element.id !== id});\n    element.isDone = !element.isDone; \n    newTaskList = [element, ...newTaskList];  \n    setTaskList(newTaskList); \n  }\n\n  const addTask = (inputValue) => {\n    const newTaskList = [inputValue, ...taskList];\n    setTaskList(newTaskList);\n  };\n\n  return (\n    <div>\n      <TodoForm onClick={addTask} />\n        <TodoList \n            taskList={taskList} \n            removeElement={removeElement} \n            crossElement={crossElement} \n            className=\"TodoList\"\n        />\n    </div>\n  );\n}\n\nexport default Todo;\n","/home/rodykings/Desktop/react-todolist/todo-list/src/components/TodoForm.js",[],"/home/rodykings/Desktop/react-todolist/todo-list/src/components/TodoList.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":15,"column":6,"nodeType":"37","endLine":15,"endColumn":16,"suggestions":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'saveLocalTodos'. Either include it or remove the dependency array.","ArrayExpression",["41"],"no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},"Update the dependencies array to be: [saveLocalTodos, taskList]",{"range":"44","text":"45"},[292,302],"[saveLocalTodos, taskList]"]